{
    "exceptions.microservice.auth.auth.checkToken": "Checking user token error.",
    "exceptions.microservice.auth.connection": "Microservice connection error.",
    "exceptions.microservice.auth.authorization": "Microservice authorization failed.",
    "exceptions.microservice.auth.validation": "Microservice validation error.",
    "exceptions.repository.chat.chatMessageAudio.findById": "Finding chat message audio by id error.",
    "exceptions.repository.chat.chatMessageAudio.getAll": "Getting all chat message audios error.",
    "exceptions.repository.chat.chatMessageAudio.getAllPaginated": "Getting all chat message audios with pagination error.",
    "exceptions.repository.chat.chatMessageAudio.getByIds": "Getting chat message audios by ids error.",
    "exceptions.repository.chat.chatMessageAudio.getForChatMessages": "Getting chat message audios for chat messages error.",
    "exceptions.repository.chat.chatMessageAudio.store": "Storing chat message audio error.",
    "exceptions.repository.chat.chatMessageAudio.update": "Updating chat message audio error.",
    "exceptions.repository.chat.chatMessageAudio.delete": "Deleting chat message audio error.",
    "exceptions.repository.chat.chatMessageAudio.deleteByIds": "Deleting chat message audios by ids error.",
    "exceptions.repository.chat.chatMessageDocument.findById": "Finding chat message document by id error.",
    "exceptions.repository.chat.chatMessageDocument.getAll": "Getting all chat message documents error.",
    "exceptions.repository.chat.chatMessageDocument.getAllPaginated": "Getting all chat message documents with pagination error.",
    "exceptions.repository.chat.chatMessageDocument.getByIds": "Getting chat message documents by ids error.",
    "exceptions.repository.chat.chatMessageDocument.getForChatMessages": "Getting chat message documents for chat messages error.",
    "exceptions.repository.chat.chatMessageDocument.store": "Storing chat message document error.",
    "exceptions.repository.chat.chatMessageDocument.update": "Updating chat message document error.",
    "exceptions.repository.chat.chatMessageDocument.delete": "Deleting chat message document error.",
    "exceptions.repository.chat.chatMessageDocument.deleteByIds": "Deleting chat message documents by ids error.",
    "exceptions.repository.chat.chatMessageImage.findById": "Finding chat message image by id error.",
    "exceptions.repository.chat.chatMessageImage.getAll": "Getting all chat message images error.",
    "exceptions.repository.chat.chatMessageImage.getAllPaginated": "Getting all chat message images with pagination error.",
    "exceptions.repository.chat.chatMessageImage.getByIds": "Getting chat message images by ids error.",
    "exceptions.repository.chat.chatMessageImage.getForChatMessages": "Getting chat message images for chat messages error.",
    "exceptions.repository.chat.chatMessageImage.store": "Storing chat message image error.",
    "exceptions.repository.chat.chatMessageImage.update": "Updating chat message image error.",
    "exceptions.repository.chat.chatMessageImage.delete": "Deleting chat message image error.",
    "exceptions.repository.chat.chatMessageImage.deleteByIds": "Deleting chat message images by ids error.",
    "exceptions.repository.chat.chatMessageVideo.findById": "Finding chat message video by id error.",
    "exceptions.repository.chat.chatMessageVideo.getAll": "Getting all chat message videos error.",
    "exceptions.repository.chat.chatMessageVideo.getAllPaginated": "Getting all chat message videos with pagination error.",
    "exceptions.repository.chat.chatMessageVideo.getByIds": "Getting chat message videos by ids error.",
    "exceptions.repository.chat.chatMessageVideo.getForChatMessages": "Getting chat message videos for chat messages error.",
    "exceptions.repository.chat.chatMessageVideo.store": "Storing chat message video error.",
    "exceptions.repository.chat.chatMessageVideo.update": "Updating chat message video error.",
    "exceptions.repository.chat.chatMessageVideo.delete": "Deleting chat message video error.",
    "exceptions.repository.chat.chatMessageVideo.deleteByIds": "Deleting chat message videos by ids error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.findById": "Finding chat message video thumbnail by id error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.getAll": "Getting all chat message video thumbnails error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.getAllPaginated": "Getting all chat message video thumbnails with pagination error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.getByIds": "Getting chat message video thumbnails by ids error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.store": "Storing chat message video thumbnail error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.update": "Updating chat message video thumbnail error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.delete": "Deleting chat message video thumbnail error.",
    "exceptions.repository.chat.chatMessageVideoThumbnail.deleteByIds": "Deleting chat message video thumbnails by ids error.",
    "exceptions.repository.preview.previewCover.findById": "Finding preview cover by id error.",
    "exceptions.repository.preview.previewCover.getAll": "Getting all preview covers error.",
    "exceptions.repository.preview.previewCover.getAllPaginated": "Getting all preview covers with pagination error.",
    "exceptions.repository.preview.previewCover.getByIds": "Getting preview covers by ids error.",
    "exceptions.repository.preview.previewCover.getActive": "Getting active preview covers error.",
    "exceptions.repository.preview.previewCover.getActiveForPreviews": "Getting active preview covers for previews error.",
    "exceptions.repository.preview.previewCover.store": "Storing preview cover error.",
    "exceptions.repository.preview.previewCover.setActive": "Setting active preview cover error.",
    "exceptions.repository.preview.previewCover.update": "Updating preview cover error.",
    "exceptions.repository.preview.previewCover.delete": "Deleting preview cover error.",
    "exceptions.repository.preview.previewCover.deleteByIds": "Deleting preview covers by ids error.",
    "exceptions.repository.preview.previewImage.findById": "Finding preview image by id error.",
    "exceptions.repository.preview.previewImage.getAll": "Getting all preview images error.",
    "exceptions.repository.preview.previewImage.getAllPaginated": "Getting all preview images with pagination error.",
    "exceptions.repository.preview.previewImage.getByIds": "Getting preview images by ids error.",
    "exceptions.repository.preview.previewImage.getActive": "Getting active preview images error.",
    "exceptions.repository.preview.previewImage.getActiveForPreviews": "Getting active preview images for previews error.",
    "exceptions.repository.preview.previewImage.store": "Storing preview image error.",
    "exceptions.repository.preview.previewImage.setActive": "Setting active preview image error.",
    "exceptions.repository.preview.previewImage.update": "Updating preview image error.",
    "exceptions.repository.preview.previewImage.delete": "Deleting preview image error.",
    "exceptions.repository.preview.previewImage.deleteByIds": "Deleting preview images by ids error.",
    "exceptions.repository.preview.previewSound.findById": "Finding preview sound by id error.",
    "exceptions.repository.preview.previewSound.getAll": "Getting all preview sounds error.",
    "exceptions.repository.preview.previewSound.getAllPaginated": "Getting all preview sounds with pagination error.",
    "exceptions.repository.preview.previewSound.getByIds": "Getting preview sounds by ids error.",
    "exceptions.repository.preview.previewSound.getActive": "Getting active preview sounds error.",
    "exceptions.repository.preview.previewSound.getActiveForPreviews": "Getting active preview sounds for previews error.",
    "exceptions.repository.preview.previewSound.store": "Storing preview sound error.",
    "exceptions.repository.preview.previewSound.setActive": "Setting active preview sound error.",
    "exceptions.repository.preview.previewSound.update": "Updating preview sound error.",
    "exceptions.repository.preview.previewSound.delete": "Deleting preview sound error.",
    "exceptions.repository.preview.previewSound.deleteByIds": "Deleting preview sounds by ids error.",
    "exceptions.repository.user.userAvatar.findById": "Finding user avatar by id error.",
    "exceptions.repository.user.userAvatar.findForRequest": "Finding user avatar for request error.",
    "exceptions.repository.user.userAvatar.getAll": "Getting all user avatars error.",
    "exceptions.repository.user.userAvatar.getAllPaginated": "Getting all user avatars with pagination error.",
    "exceptions.repository.user.userAvatar.getAllForRequest": "Getting all user avatars for request error.",
    "exceptions.repository.user.userAvatar.getByIds": "Getting user avatars by ids error.",
    "exceptions.repository.user.userAvatar.getActive": "Getting active user avatar error.",
    "exceptions.repository.user.userAvatar.getActiveForUsers": "Getting active user avatars for users error.",
    "exceptions.repository.user.userAvatar.getForUsers": "Getting user avatars for users error.",
    "exceptions.repository.user.userAvatar.getAllForUserExceptOne": "Getting all user avatars for user except one error.",
    "exceptions.repository.user.userAvatar.store": "Storing user avatar error.",
    "exceptions.repository.user.userAvatar.setDeactivatedAllInsteadUserAvatar": "Setting all user avatars deactivated instead user error.",
    "exceptions.repository.user.userAvatar.update": "Updating user avatar error.",
    "exceptions.repository.user.userAvatar.acceptForRequest": "Accepting user avatars for request error.",
    "exceptions.repository.user.userAvatar.declineForRequest": "Declining user avatars for request error.",
    "exceptions.repository.user.userAvatar.delete": "Deleting user avatar error.",
    "exceptions.repository.user.userAvatar.deleteByIds": "Deleting user avatars by ids error.",
    "exceptions.repository.user.userBackground.findById": "Finding user background by id error.",
    "exceptions.repository.user.userBackground.findForRequest": "Finding user background for request error.",
    "exceptions.repository.user.userBackground.getAll": "Getting all user backgrounds error.",
    "exceptions.repository.user.userBackground.getAllPaginated": "Getting all user backgrounds with pagination error.",
    "exceptions.repository.user.userBackground.getAllForRequest": "Getting all user backgrounds for request error.",
    "exceptions.repository.user.userBackground.getByIds": "Getting user backgrounds by ids error.",
    "exceptions.repository.user.userBackground.getActive": "Getting active user background error.",
    "exceptions.repository.user.userBackground.getActiveForUsers": "Getting active user backgrounds for users error.",
    "exceptions.repository.user.userBackground.getAllForUserExceptOne": "Getting all user backgrounds for user except one error.",
    "exceptions.repository.user.userBackground.store": "Storing user background error.",
    "exceptions.repository.user.userBackground.update": "Updating user background error.",
    "exceptions.repository.user.userBackground.setDeactivatedAllInsteadUserBackground": "Setting all user backgrounds deactivated instead user error.",
    "exceptions.repository.user.userBackground.acceptForRequest": "Accepting user backgrounds for request error.",
    "exceptions.repository.user.userBackground.declineForRequest": "Declining user backgrounds for request error.",
    "exceptions.repository.user.userBackground.delete": "Deleting user background error.",
    "exceptions.repository.user.userBackground.deleteByIds": "Deleting user backgrounds by ids error.",
    "exceptions.repository.user.userFavoriteSticker.getAllForUser": "Getting all user favorite stickers for user error.",
    "exceptions.repository.user.userFavoriteSticker.getAllForUserPaginated": "Getting all user favorite stickers for user with pagination error.",
    "exceptions.repository.user.userFavoriteSticker.checkForUserExistence": "Checking favorite sticker for user existence error.",
    "exceptions.repository.user.userFavoriteSticker.store": "Storing user favorite sticker error.",
    "exceptions.repository.user.userFavoriteSticker.deleteForUser": "Deleting favorite sticker for user error.",
    "exceptions.repository.user.userFavoriteSticker.deleteAllForUser": "Deleting all favorite stickers for user error.",
    "exceptions.repository.user.userIdVerificationDocument.findById": "Finding user id verification document by id error.",
    "exceptions.repository.user.userIdVerificationDocument.getAll": "Getting all user id verification documents error.",
    "exceptions.repository.user.userIdVerificationDocument.getAllPaginated": "Getting all user id verification documents with pagination error.",
    "exceptions.repository.user.userIdVerificationDocument.getAllForRequest": "Getting all user id verification documents for request error.",
    "exceptions.repository.user.userIdVerificationDocument.getByIds": "Getting user id verification documents by ids error.",
    "exceptions.repository.user.userIdVerificationDocument.getForUsers": "Getting user id verification documents for users error.",
    "exceptions.repository.user.userIdVerificationDocument.getDeclinedForUser": "Getting declined user id verification documents for users error.",
    "exceptions.repository.user.userIdVerificationDocument.store": "Storing user id verification document error.",
    "exceptions.repository.user.userIdVerificationDocument.update": "Updating user id verification document error.",
    "exceptions.repository.user.userIdVerificationDocument.declineForRequest": "Declining user id verification documents for request error.",
    "exceptions.repository.user.userIdVerificationDocument.delete": "Deleting user id verification document error.",
    "exceptions.repository.user.userIdVerificationDocument.deleteByIds": "Deleting user id verification documents by ids error.",
    "exceptions.repository.user.userImage.findById": "Finding user image by id error.",
    "exceptions.repository.user.userImage.getAll": "Getting all user images error.",
    "exceptions.repository.user.userImage.getAllPaginated": "Getting all user images with pagination error.",
    "exceptions.repository.user.userImage.getAllForRequest": "Getting all user images for request error.",
    "exceptions.repository.user.userImage.getByIds": "Getting user images by ids error.",
    "exceptions.repository.user.userImage.getForUsers": "Getting user images for users error.",
    "exceptions.repository.user.userImage.store": "Storing user image error.",
    "exceptions.repository.user.userImage.update": "Updating user image error.",
    "exceptions.repository.user.userImage.acceptAllForRequest": "Accepting all user images for request error.",
    "exceptions.repository.user.userImage.declineAllForRequest": "Declining all user images for request error.",
    "exceptions.repository.user.userImage.delete": "Deleting user images error.",
    "exceptions.repository.user.userImage.deleteByIds": "Deleting user images by ids error.",
    "exceptions.repository.user.userVideo.findById": "Finding user video by id error.",
    "exceptions.repository.user.userVideo.getAll": "Getting all user videos error.",
    "exceptions.repository.user.userVideo.getAllPaginated": "Getting all user videos with pagination error.",
    "exceptions.repository.user.userVideo.getAllForRequest": "Getting all user videos for request error.",
    "exceptions.repository.user.userVideo.getByIds": "Getting user videos by ids error.",
    "exceptions.repository.user.userVideo.getForUsers": "Getting user videos for users error.",
    "exceptions.repository.user.userVideo.getAllForUserExceptOne": "Getting all user videos for user except one error.",
    "exceptions.repository.user.userVideo.store": "Storing user video error.",
    "exceptions.repository.user.userVideo.update": "Updating user video error.",
    "exceptions.repository.user.userVideo.acceptAllForRequest": "Accepting all user videos for request error.",
    "exceptions.repository.user.userVideo.declineAllForRequest": "Declining all user videos for request error.",
    "exceptions.repository.user.userVideo.delete": "Deleting user video error.",
    "exceptions.repository.user.userVideo.deleteByIds": "Deleting user videos by ids error.",
    "exceptions.repository.user.userVideoThumbnail.findById": "Finding user video thumbnail by id error.",
    "exceptions.repository.user.userVideoThumbnail.getAll": "Getting all user video thumbnails error.",
    "exceptions.repository.user.userVideoThumbnail.getAllPaginated": "Getting all user video thumbnails with pagination error.",
    "exceptions.repository.user.userVideoThumbnail.getByIds": "Getting user video thumbnails by ids error.",
    "exceptions.repository.user.userVideoThumbnail.store": "Storing user video thumbnail error.",
    "exceptions.repository.user.userVideoThumbnail.update": "Updating user video thumbnail error.",
    "exceptions.repository.user.userVideoThumbnail.delete": "Deleting user video thumbnail error.",
    "exceptions.repository.user.userVideoThumbnail.deleteByIds": "Deleting user video thumbnails by ids error.",
    "exceptions.repository.user.userVoiceSample.findById": "Finding user voice sample by id error.",
    "exceptions.repository.user.userVoiceSample.findForRequest": "Finding user voice sample for request error.",
    "exceptions.repository.user.userVoiceSample.findForUser": "Finding user voice sample for user error.",
    "exceptions.repository.user.userVoiceSample.getAll": "Getting all user voice samples error.",
    "exceptions.repository.user.userVoiceSample.getAllPaginated": "Getting all user voice samples with pagination error.",
    "exceptions.repository.user.userVoiceSample.getAllForRequest": "Getting all user voice samples for request error.",
    "exceptions.repository.user.userVoiceSample.getByIds": "Getting user voice samples by ids error.",
    "exceptions.repository.user.userVoiceSample.getForUsers": "Getting user voice samples for users error.",
    "exceptions.repository.user.userVoiceSample.getAllForUserExceptOne": "Getting all user voice samples for user except one error.",
    "exceptions.repository.user.userVoiceSample.store": "Storing user voice sample error.",
    "exceptions.repository.user.userVoiceSample.update": "Updating user voice sample error.",
    "exceptions.repository.user.userVoiceSample.acceptForRequest": "Accepting all user voice samples for request error.",
    "exceptions.repository.user.userVoiceSample.declineForRequest": "Declining all user voice samples for request error.",
    "exceptions.repository.user.userVoiceSample.delete": "Deleting user voice sample error.",
    "exceptions.repository.user.userVoiceSample.deleteByIds": "Deleting user voice samples by ids error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.findById": "Finding vat number proof document by id error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.getAll": "Getting all vat number proof documents error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.getAllPaginated": "Getting all vat number proof documents with pagination error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.getAllForBillingSetting": "Getting all vat number proof documents for billing setting error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.getAllForVatNumberProof": "Getting all vat number proof documents for vat number proof error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.getByIds": "Getting vat number proof documents by ids error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.store": "Storing vat number proof document error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.update": "Updating vat number proof document error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.delete": "Deleting vat number proof document error.",
    "exceptions.repository.vatNumberProof.vatNumberProofDocument.deleteByIds": "Deleting vat number proof documents by ids error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.findById": "Finding vat number proof image by id error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.getAll": "Getting all vat number proof images error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.getAllPaginated": "Getting all vat number proof images with pagination error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.getAllForBillingSetting": "Getting all vat number proof images for billing setting error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.getAllForVatNumberProof": "Getting all vat number proof images for vat number proof error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.getByIds": "Getting vat number proof images by ids error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.store": "Storing vat number proof image error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.update": "Updating vat number proof image error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.delete": "Deleting vat number proof image error.",
    "exceptions.repository.vatNumberProof.vatNumberProofImage.deleteByIds": "Deleting vat number proof images by ids error.",
    "exceptions.repository.vybe.vybeImage.findById": "Finding vybe image by id error.",
    "exceptions.repository.vybe.vybeImage.getAll": "Getting all vybe images error.",
    "exceptions.repository.vybe.vybeImage.getAllPaginated": "Getting all vybe images with pagination error.",
    "exceptions.repository.vybe.vybeImage.getByIds": "Getting vybe images by ids error.",
    "exceptions.repository.vybe.vybeImage.store": "Storing vybe image error.",
    "exceptions.repository.vybe.vybeImage.update": "Updating vybe image error.",
    "exceptions.repository.vybe.vybeImage.accept": "Accepting vybe image error.",
    "exceptions.repository.vybe.vybeImage.decline": "Declining vybe image error.",
    "exceptions.repository.vybe.vybeImage.delete": "Deleting vybe image error.",
    "exceptions.repository.vybe.vybeImage.deleteByIds": "Deleting vybe images by ids error.",
    "exceptions.repository.vybe.vybeVideo.findById": "Finding vybe video by id error.",
    "exceptions.repository.vybe.vybeVideo.getAll": "Getting all vybe videos error.",
    "exceptions.repository.vybe.vybeVideo.getAllPaginated": "Getting all vybe videos with pagination error.",
    "exceptions.repository.vybe.vybeVideo.getByIds": "Getting vybe videos by ids error.",
    "exceptions.repository.vybe.vybeVideo.store": "Storing vybe video error.",
    "exceptions.repository.vybe.vybeVideo.update": "Updating vybe video error.",
    "exceptions.repository.vybe.vybeVideo.accept": "Accepting vybe video error.",
    "exceptions.repository.vybe.vybeVideo.decline": "Declining vybe video error.",
    "exceptions.repository.vybe.vybeVideo.delete": "Deleting vybe video error.",
    "exceptions.repository.vybe.vybeVideo.deleteByIds": "Deleting vybe videos by ids error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.findById": "Finding vybe video thumbnail by id error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.getAll": "Getting all vybe video thumbnails error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.getAllPaginated": "Getting all vybe video thumbnails with pagination error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.getByIds": "Getting vybe video thumbnails by ids error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.store": "Storing vybe video thumbnail error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.update": "Updating vybe video thumbnail error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.delete": "Deleting vybe video thumbnail error.",
    "exceptions.repository.vybe.vybeVideoThumbnail.deleteByIds": "Deleting vybe video thumbnails by ids error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.findById": "Finding withdrawal receipt proof document by id error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.getAll": "Getting all withdrawal receipt proof documents error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.getAllPaginated": "Getting all withdrawal receipt proof documents with pagination error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.getAllForWithdrawalReceipt": "Getting all withdrawal receipt proof documents for receipt error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.getByIds": "Getting withdrawal receipt proof documents by ids error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.store": "Storing withdrawal receipt proof document error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.update": "Updating withdrawal receipt proof document error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.delete": "Deleting withdrawal receipt proof document error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.deleteByIds": "Deleting withdrawal receipt proof documents by ids error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofDocument.deleteAllForReceipt": "Deleting withdrawal receipt proof documents for receipt error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.findById": "Finding withdrawal receipt proof image by id error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.getAll": "Getting all withdrawal receipt proof images error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.getAllPaginated": "Getting all withdrawal receipt proof images with pagination error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.getAllForWithdrawalReceipt": "Getting all withdrawal receipt proof images for receipt error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.getByIds": "Getting withdrawal receipt proof images by ids error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.store": "Storing withdrawal receipt proof image error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.update": "Updating withdrawal receipt proof image error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.delete": "Deleting withdrawal receipt proof image error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.deleteByIds": "Deleting withdrawal receipt proof images by ids error.",
    "exceptions.repository.withdrawalReceiptProof.withdrawalReceiptProofImage.deleteAllForReceipt": "Deleting withdrawal receipt proof images for receipt error.",
    "exceptions.repository.activityImage.findById": "Finding activity image by id error.",
    "exceptions.repository.activityImage.getAll": "Getting all activity images error.",
    "exceptions.repository.activityImage.getAllPaginated": "Getting all activity images with pagination error.",
    "exceptions.repository.activityImage.getByIds": "Getting activity images by ids error.",
    "exceptions.repository.activityImage.getForActivities": "Getting activity images for activity error.",
    "exceptions.repository.activityImage.getPostersForActivities": "Getting posters for activities error.",
    "exceptions.repository.activityImage.getByType": "Getting activity images by type error.",
    "exceptions.repository.activityImage.store": "Storing activity image error.",
    "exceptions.repository.activityImage.update": "Updating activity image error.",
    "exceptions.repository.activityImage.delete": "Deleting activity image error.",
    "exceptions.repository.activityImage.deleteByIds": "Deleting activity images by ids error.",
    "exceptions.repository.categoryIcon.findById": "Finding category icon by id error.",
    "exceptions.repository.categoryIcon.getAll": "Getting all category icons error.",
    "exceptions.repository.categoryIcon.getAllPaginated": "Getting all category icons with pagination error.",
    "exceptions.repository.categoryIcon.getByCategory": "Getting category icons by category error.",
    "exceptions.repository.categoryIcon.getByIds": "Getting category icons by ids error.",
    "exceptions.repository.categoryIcon.getByCategoriesIds": "Getting category icons by categories ids error.",
    "exceptions.repository.categoryIcon.store": "Storing category icon error.",
    "exceptions.repository.categoryIcon.update": "Updating category icon error.",
    "exceptions.repository.categoryIcon.delete": "Deleting category icon error.",
    "exceptions.repository.categoryIcon.deleteByIds": "Deleting category icon by ids error.",
    "exceptions.repository.deviceIcon.findById": "Finding device icon by id error.",
    "exceptions.repository.deviceIcon.getAll": "Getting all device icons error.",
    "exceptions.repository.deviceIcon.getAllPaginated": "Getting all device icons with pagination error.",
    "exceptions.repository.deviceIcon.getByDevice": "Getting device icons by device error.",
    "exceptions.repository.deviceIcon.getByIds": "Getting device icons by ids error.",
    "exceptions.repository.deviceIcon.getByDevicesIds": "Getting device icons by devices ids error.",
    "exceptions.repository.deviceIcon.store": "Storing device icon error.",
    "exceptions.repository.deviceIcon.update": "Updating device icon error.",
    "exceptions.repository.deviceIcon.delete": "Deleting device icon error.",
    "exceptions.repository.deviceIcon.deleteByIds": "Deleting device icons by ids error.",
    "exceptions.repository.exceptionLog.findById": "Finding exception log by id error.",
    "exceptions.repository.exceptionLog.getAll": "Getting all exception logs error.",
    "exceptions.repository.exceptionLog.getAllPaginated": "Getting all exception logs with pagination error.",
    "exceptions.repository.exceptionLog.store": "Storing exception log error.",
    "exceptions.repository.exceptionLog.delete": "Deleting exception log error.",
    "exceptions.repository.platformIcon.findById": "Finding platform icon by id error.",
    "exceptions.repository.platformIcon.getAll": "Getting all platform icons error.",
    "exceptions.repository.platformIcon.getAllPaginated": "Getting all platform icons with pagination error.",
    "exceptions.repository.platformIcon.getByPlatform": "Getting platform icons by platform error.",
    "exceptions.repository.platformIcon.getByIds": "Getting platform icons by ids error.",
    "exceptions.repository.platformIcon.getByPlatformsIds": "Getting platform icons by platforms ids error.",
    "exceptions.repository.platformIcon.store": "Storing platform icon error.",
    "exceptions.repository.platformIcon.update": "Updating platform icon error.",
    "exceptions.repository.platformIcon.delete": "Deleting platform icon error.",
    "exceptions.repository.platformIcon.deleteByIds": "Deleting platform icons by ids error.",
    "exceptions.service.user.userSticker.getCategories": "Getting sticker categories error.",
    "exceptions.service.user.userSticker.getFeatured": "Getting featured sticker categories error.",
    "exceptions.service.user.userSticker.searchByQuery": "Searching for stickers by query error.",
    "exceptions.service.user.userSticker.getFavorites": "Getting user favorite stickers error.",
    "exceptions.service.file.uploadFile": "Uploading file error.",
    "exceptions.service.file.getFileDuration": "Getting file duration error.",
    "exceptions.service.file.getFileSize": "Getting file size error.",
    "exceptions.service.file.createImageThumbnailFile": "Creating image thumbnail file error.",
    "exceptions.service.file.createVideoThumbnailFile": "Creating video thumbnail file error.",
    "exceptions.service.file.deleteFile": "Deleting file error.",
    "exceptions.service.file.deleteImageThumbnailFile": "Deleting image thumbnail file error.",
    "validations.api.general.activity.image.destroy.result.success": "All activity images has been successfully deleted.",
    "validations.api.general.activity.image.storeMany.activity_images.required": "The activity images field is required.",
    "validations.api.general.activity.image.storeMany.activity_images.array": "The activity images field must be an array.",
    "validations.api.general.activity.image.storeMany.activity_images.*.content.required": "The content field is required.",
    "validations.api.general.activity.image.storeMany.activity_images.*.content.string": "The content field must be a string.",
    "validations.api.general.activity.image.storeMany.activity_images.*.mime.required": "The mime field is required.",
    "validations.api.general.activity.image.storeMany.activity_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.activity.image.storeMany.activity_images.*.extension.required": "The extension field is required.",
    "validations.api.general.activity.image.storeMany.activity_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.activity.image.storeMany.activity_images.*.type.required": "The type field is required.",
    "validations.api.general.activity.image.storeMany.activity_images.*.type.string": "The type field must be a string.",
    "validations.api.general.activity.image.storeMany.result.success": "Activity images have been successfully stored.",
    "validations.api.general.admin.avatar.destroy.result.success": "Admin avatars have been successfully deleted.",
    "validations.api.general.admin.avatar.store.content.required": "The content field is required.",
    "validations.api.general.admin.avatar.store.content.string": "The content field must be a string.",
    "validations.api.general.admin.avatar.store.mime.required": "The mime field is required.",
    "validations.api.general.admin.avatar.store.mime.string": "The mime field must be a string.",
    "validations.api.general.admin.avatar.store.extension.required": "The extension field is required.",
    "validations.api.general.admin.avatar.store.extension.string": "The extension field must be a string.",
    "validations.api.general.admin.avatar.store.result.error": "Failed to find аn admin avatar.",
    "validations.api.general.admin.avatar.store.result.success": "Admin avatar has been successfully stored.",
    "validations.api.general.alert.image.destroyMany.alert_images_ids.required": "The alert images ids field is required.",
    "validations.api.general.alert.image.destroyMany.alert_images_ids.array": "The alert images ids field must be an array.",
    "validations.api.general.alert.image.destroyMany.alert_images_ids.*.required": "The alert image id field is required.",
    "validations.api.general.alert.image.destroyMany.alert_images_ids.*.string": "The alert image id field must be a string.",
    "validations.api.general.alert.image.destroyMany.alert_images_ids.*.exists": "The selected alert image id field is invalid.",
    "validations.api.general.alert.image.destroyMany.result.success": "Alert images have been successfully deleted.",
    "validations.api.general.alert.image.storeMany.alert_images.required": "The alert images field is required.",
    "validations.api.general.alert.image.storeMany.alert_images.array": "The alert images field must be an array.",
    "validations.api.general.alert.image.storeMany.alert_images.*.content.required": "The content field is required.",
    "validations.api.general.alert.image.storeMany.alert_images.*.content.string": "The content field must be a string.",
    "validations.api.general.alert.image.storeMany.alert_images.*.extension.required": "The extension field is required.",
    "validations.api.general.alert.image.storeMany.alert_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.alert.image.storeMany.alert_images.*.mime.required": "The mime field is required.",
    "validations.api.general.alert.image.storeMany.alert_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.alert.image.storeMany.result.success": "Alert images have been successfully stored.",
    "validations.api.general.alert.sound.destroyMany.alert_sounds_ids.required": "The alert sounds ids field is required.",
    "validations.api.general.alert.sound.destroyMany.alert_sounds_ids.array": "The alert sounds ids field must be an array.",
    "validations.api.general.alert.sound.destroyMany.alert_sounds_ids.*.required": "The alert sound id field is required.",
    "validations.api.general.alert.sound.destroyMany.alert_sounds_ids.*.string": "The alert sound id field must be a string.",
    "validations.api.general.alert.sound.destroyMany.alert_sounds_ids.*.exists": "The selected alert sound id field is invalid.",
    "validations.api.general.alert.sound.destroyMany.result.success": "Alert sounds have been successfully deleted.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.required": "The alert sounds field is required.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.array": "The alert sounds field must be an array.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.content.required": "The content field is required.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.content.string": "The content field must be a string.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.extension.required": "The extension field is required.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.extension.string": "The extension field must be a string.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.mime.required": "The mime field is required.",
    "validations.api.general.alert.sound.storeMany.alert_sounds.*.mime.string": "The mime field must be a string.",
    "validations.api.general.alert.sound.storeMany.result.success": "Alert sounds have been successfully stored.",
    "validations.api.general.category.icon.destroy.result.success": "Category icons have been successfully deleted.",
    "validations.api.general.category.icon.store.content.required": "The content field is required.",
    "validations.api.general.category.icon.store.content.string": "The content field must be a string.",
    "validations.api.general.category.icon.store.mime.required": "The mime field is required.",
    "validations.api.general.category.icon.store.mime.string": "The mime field must be a string.",
    "validations.api.general.category.icon.store.extension.required": "The extension field is required.",
    "validations.api.general.category.icon.store.extension.string": "The extension field must be a string.",
    "validations.api.general.category.icon.store.result.error": "Failed to find a category icon.",
    "validations.api.general.category.icon.store.result.success": "Category icon has been successfully stored.",
    "validations.api.general.chat.message.audio.destroyMany.chat_message_audios_ids.required": "The chat message audios ids field is required.",
    "validations.api.general.chat.message.audio.destroyMany.chat_message_audios_ids.array": "The chat message audios ids field must be an array.",
    "validations.api.general.chat.message.audio.destroyMany.chat_message_audios_ids.*.required": "The chat message audio id field is required.",
    "validations.api.general.chat.message.audio.destroyMany.chat_message_audios_ids.*.string": "The chat message audio id field must be a string.",
    "validations.api.general.chat.message.audio.destroyMany.chat_message_audios_ids.*.exists": "The selected chat message audio id field is invalid.",
    "validations.api.general.chat.message.audio.destroyMany.result.success": "Chat message audios has been successfully deleted.",
    "validations.api.general.chat.message.audio.downloadFile.result.error": "Failed to find а chat message audio.",
    "validations.api.general.chat.message.audio.store.content.required": "The content field is required.",
    "validations.api.general.chat.message.audio.store.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.audio.store.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.audio.store.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.audio.store.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.audio.store.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.audio.store.result.error": "Failed to create а chat message audio.",
    "validations.api.general.chat.message.audio.store.result.success": "Chat message audio has been successfully stored.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.required": "The chat message audios field is required.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.array": "The chat message audios field must be an array.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.content.required": "The content field is required.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.audio.storeMany.chat_message_audios.*.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.audio.storeMany.result.success": "Chat message audios have been successfully stored.",
    "validations.api.general.chat.message.document.destroyMany.chat_message_documents_ids.required": "The chat message documents ids field is required.",
    "validations.api.general.chat.message.document.destroyMany.chat_message_documents_ids.array": "The chat message documents ids field must be an array.",
    "validations.api.general.chat.message.document.destroyMany.chat_message_documents_ids.*.required": "The chat message document id field is required.",
    "validations.api.general.chat.message.document.destroyMany.chat_message_documents_ids.*.string": "The chat message document id field must be a string.",
    "validations.api.general.chat.message.document.destroyMany.chat_message_documents_ids.*.exists": "The selected chat message document id field is invalid.",
    "validations.api.general.chat.message.document.destroyMany.result.success": "Chat message documents has been successfully deleted.",
    "validations.api.general.chat.message.document.downloadFile.result.error": "Failed to find а chat message document.",
    "validations.api.general.chat.message.document.store.content.required": "The content field is required.",
    "validations.api.general.chat.message.document.store.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.document.store.original_name.string": "The original name field must be a string.",
    "validations.api.general.chat.message.document.store.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.document.store.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.document.store.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.document.store.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.document.store.result.error": "Failed to create а chat message document.",
    "validations.api.general.chat.message.document.store.result.success": "Chat message document has been successfully stored.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.required": "The chat message documents field is required.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.array": "The chat message documents field must be an array.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.content.required": "The content field is required.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.original_name.string": "The original name field must be a string.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.document.storeMany.chat_message_documents.*.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.document.storeMany.result.success": "Chat message documents have been successfully stored.",
    "validations.api.general.chat.message.image.destroyMany.chat_message_images_ids.required": "The chat message images ids field is required.",
    "validations.api.general.chat.message.image.destroyMany.chat_message_images_ids.array": "The chat message images ids field must be an array.",
    "validations.api.general.chat.message.image.destroyMany.chat_message_images_ids.*.required": "The chat message image id field is required.",
    "validations.api.general.chat.message.image.destroyMany.chat_message_images_ids.*.string": "The chat message image id field must be a string.",
    "validations.api.general.chat.message.image.destroyMany.chat_message_images_ids.*.exists": "The selected chat message image id field is invalid.",
    "validations.api.general.chat.message.image.destroyMany.result.success": "Chat message images has been successfully deleted.",
    "validations.api.general.chat.message.image.downloadFile.result.error": "Failed to find а chat message image.",
    "validations.api.general.chat.message.image.downloadMinFile.result.error": "Failed to find а chat message image.",
    "validations.api.general.chat.message.image.store.content.required": "The content field is required.",
    "validations.api.general.chat.message.image.store.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.image.store.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.image.store.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.image.store.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.image.store.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.image.store.result.error": "Failed to create а chat message image.",
    "validations.api.general.chat.message.image.store.result.success": "Chat message image has been successfully stored.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.required": "The chat message images field is required.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.array": "The chat message images field must be an array.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.content.required": "The content field is required.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.image.storeMany.chat_message_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.image.storeMany.result.success": "Chat message images have been successfully stored.",
    "validations.api.general.chat.message.thumbnail.downloadFile.result.error": "Failed to find а chat message video thumbnail.",
    "validations.api.general.chat.message.thumbnail.downloadMinFile.result.error": "Failed to find а chat message video thumbnail.",
    "validations.api.general.chat.message.video.destroyMany.chat_message_videos_ids.required": "The chat message videos ids field is required.",
    "validations.api.general.chat.message.video.destroyMany.chat_message_videos_ids.array": "The chat message videos ids field must be an array.",
    "validations.api.general.chat.message.video.destroyMany.chat_message_videos_ids.*.required": "The chat message video id field is required.",
    "validations.api.general.chat.message.video.destroyMany.chat_message_videos_ids.*.string": "The chat message video id field must be a string.",
    "validations.api.general.chat.message.video.destroyMany.chat_message_videos_ids.*.exists": "The selected chat message video id field is invalid.",
    "validations.api.general.chat.message.video.destroyMany.result.success": "Chat message videos has been successfully deleted.",
    "validations.api.general.chat.message.video.downloadFile.result.error": "Failed to find а chat message video.",
    "validations.api.general.chat.message.video.store.content.required": "The content field is required.",
    "validations.api.general.chat.message.video.store.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.video.store.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.video.store.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.video.store.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.video.store.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.video.store.result.error": "Failed to create а chat message video.",
    "validations.api.general.chat.message.video.store.result.success": "Chat message video has been successfully stored.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.required": "The chat message videos field is required.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.array": "The chat message videos field must be an array.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.content.required": "The content field is required.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.content.string": "The content field must be a string.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.mime.required": "The mime field is required.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.mime.string": "The mime field must be a string.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.extension.required": "The extension field is required.",
    "validations.api.general.chat.message.video.storeMany.chat_message_videos.*.extension.string": "The extension field must be a string.",
    "validations.api.general.chat.message.video.storeMany.result.success": "Chat message videos have been successfully stored.",
    "validations.api.general.chat.message.deleteForChatMessage.result.success": "Chat message media has been successfully deleted.",
    "validations.api.general.chat.message.getForChatMessages.chat_messages_ids.required": "The chat messages ids field is required.",
    "validations.api.general.chat.message.getForChatMessages.chat_messages_ids.array": "The chat messages ids field must be an array.",
    "validations.api.general.chat.message.getForChatMessages.chat_messages_ids.*.required": "The chat message id field is required.",
    "validations.api.general.chat.message.getForChatMessages.chat_messages_ids.*.string": "The chat message id field must be a string.",
    "validations.api.general.chat.message.getForChatMessages.auth_ids.required": "The auth ids field is required.",
    "validations.api.general.chat.message.getForChatMessages.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.general.chat.message.getForChatMessages.auth_ids.*.required": "The auth id field is required.",
    "validations.api.general.chat.message.getForChatMessages.auth_ids.*.integer": "The auth id field must be a integer.",
    "validations.api.general.chat.message.getForChatMessages.result.success": "Chat messages media has been successfully received.",
    "validations.api.general.support.ticket.message.audio.destroyMany.support_ticket_message_audios_ids.required": "The support ticket message audios ids field is required.",
    "validations.api.general.support.ticket.message.audio.destroyMany.support_ticket_message_audios_ids.array": "The support ticket message audios ids field must be an array.",
    "validations.api.general.support.ticket.message.audio.destroyMany.support_ticket_message_audios_ids.*.required": "The support ticket message audio id field is required.",
    "validations.api.general.support.ticket.message.audio.destroyMany.support_ticket_message_audios_ids.*.string": "The support ticket message audio id field must be a string.",
    "validations.api.general.support.ticket.message.audio.destroyMany.support_ticket_message_audios_ids.*.exists": "The selected support ticket message audio id field is invalid.",
    "validations.api.general.support.ticket.message.audio.destroyMany.result.success": "Support ticket message audios has been successfully deleted.",
    "validations.api.general.support.ticket.message.audio.downloadFile.result.error": "Failed to find а support ticket message audio.",
    "validations.api.general.support.ticket.message.audio.store.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.audio.store.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.audio.store.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.audio.store.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.audio.store.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.audio.store.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.audio.store.result.error": "Failed to create а support ticket message audio.",
    "validations.api.general.support.ticket.message.audio.store.result.success": "Support ticket message audio has been successfully stored.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.required": "The support ticket message audios field is required.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.array": "The support ticket message audios field must be an array.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.audio.storeMany.support_ticket_message_audios.*.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.audio.storeMany.result.success": "Support ticket message audios have been successfully stored.",
    "validations.api.general.support.ticket.message.document.destroyMany.support_ticket_message_documents_ids.required": "The support ticket message documents ids field is required.",
    "validations.api.general.support.ticket.message.document.destroyMany.support_ticket_message_documents_ids.array": "The support ticket message documents ids field must be an array.",
    "validations.api.general.support.ticket.message.document.destroyMany.support_ticket_message_documents_ids.*.required": "The support ticket message document id field is required.",
    "validations.api.general.support.ticket.message.document.destroyMany.support_ticket_message_documents_ids.*.string": "The support ticket message document id field must be a string.",
    "validations.api.general.support.ticket.message.document.destroyMany.support_ticket_message_documents_ids.*.exists": "The selected support ticket message document id field is invalid.",
    "validations.api.general.support.ticket.message.document.destroyMany.result.success": "Support ticket message documents has been successfully deleted.",
    "validations.api.general.support.ticket.message.document.downloadFile.result.error": "Failed to find а support ticket message document.",
    "validations.api.general.support.ticket.message.document.store.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.document.store.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.document.store.original_name.string": "The original name field must be a string.",
    "validations.api.general.support.ticket.message.document.store.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.document.store.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.document.store.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.document.store.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.document.store.result.error": "Failed to create а support ticket message document.",
    "validations.api.general.support.ticket.message.document.store.result.success": "Support ticket message document has been successfully stored.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.required": "The support ticket message documents field is required.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.array": "The support ticket message documents field must be an array.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.original_name.string": "The original name field must be a string.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.document.storeMany.support_ticket_message_documents.*.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.document.storeMany.result.success": "Support ticket message documents have been successfully stored.",
    "validations.api.general.support.ticket.message.image.destroyMany.support_ticket_message_images_ids.required": "The support ticket message images ids field is required.",
    "validations.api.general.support.ticket.message.image.destroyMany.support_ticket_message_images_ids.array": "The support ticket message images ids field must be an array.",
    "validations.api.general.support.ticket.message.image.destroyMany.support_ticket_message_images_ids.*.required": "The support ticket message image id field is required.",
    "validations.api.general.support.ticket.message.image.destroyMany.support_ticket_message_images_ids.*.string": "The support ticket message image id field must be a string.",
    "validations.api.general.support.ticket.message.image.destroyMany.support_ticket_message_images_ids.*.exists": "The selected support ticket message image id field is invalid.",
    "validations.api.general.support.ticket.message.image.destroyMany.result.success": "Support ticket message images has been successfully deleted.",
    "validations.api.general.support.ticket.message.image.downloadFile.result.error": "Failed to find а support ticket message image.",
    "validations.api.general.support.ticket.message.image.downloadMinFile.result.error": "Failed to find а support ticket message image.",
    "validations.api.general.support.ticket.message.image.store.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.image.store.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.image.store.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.image.store.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.image.store.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.image.store.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.image.store.result.error": "Failed to create а support ticket message image.",
    "validations.api.general.support.ticket.message.image.store.result.success": "Support ticket message image has been successfully stored.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.required": "The support ticket message images field is required.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.array": "The support ticket message images field must be an array.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.image.storeMany.support_ticket_message_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.image.storeMany.result.success": "Support ticket message images have been successfully stored.",
    "validations.api.general.support.ticket.message.thumbnail.downloadFile.result.error": "Failed to find а support ticket message video thumbnail.",
    "validations.api.general.support.ticket.message.thumbnail.downloadMinFile.result.error": "Failed to find а support ticket message video thumbnail.",
    "validations.api.general.support.ticket.message.video.destroyMany.support_ticket_message_videos_ids.required": "The support ticket message videos ids field is required.",
    "validations.api.general.support.ticket.message.video.destroyMany.support_ticket_message_videos_ids.array": "The support ticket message videos ids field must be an array.",
    "validations.api.general.support.ticket.message.video.destroyMany.support_ticket_message_videos_ids.*.required": "The support ticket message video id field is required.",
    "validations.api.general.support.ticket.message.video.destroyMany.support_ticket_message_videos_ids.*.string": "The support ticket message video id field must be a string.",
    "validations.api.general.support.ticket.message.video.destroyMany.support_ticket_message_videos_ids.*.exists": "The selected support ticket message video id field is invalid.",
    "validations.api.general.support.ticket.message.video.destroyMany.result.success": "Support ticket message videos has been successfully deleted.",
    "validations.api.general.support.ticket.message.video.downloadFile.result.error": "Failed to find а support ticket message video.",
    "validations.api.general.support.ticket.message.video.store.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.video.store.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.video.store.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.video.store.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.video.store.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.video.store.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.video.store.result.error": "Failed to create а support ticket message video.",
    "validations.api.general.support.ticket.message.video.store.result.success": "Support ticket message video has been successfully stored.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.required": "The support ticket message videos field is required.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.array": "The support ticket message videos field must be an array.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.content.required": "The content field is required.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.content.string": "The content field must be a string.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.mime.required": "The mime field is required.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.mime.string": "The mime field must be a string.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.extension.required": "The extension field is required.",
    "validations.api.general.support.ticket.message.video.storeMany.support_ticket_message_videos.*.extension.string": "The extension field must be a string.",
    "validations.api.general.support.ticket.message.video.storeMany.result.success": "Support ticket message videos have been successfully stored.",
    "validations.api.general.support.ticket.message.deleteForSupportTicketMessage.result.success": "Support ticket message media has been successfully deleted.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.support_ticket_messages_ids.required": "The support ticket messages ids field is required.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.support_ticket_messages_ids.array": "The support ticket messages ids field must be an array.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.support_ticket_messages_ids.*.required": "The support ticket message id field is required.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.support_ticket_messages_ids.*.string": "The support ticket message id field must be a string.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.auth_ids.required": "The auth ids field is required.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.auth_ids.*.required": "The auth id field is required.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.auth_ids.*.integer": "The auth id field must be a integer.",
    "validations.api.general.support.ticket.message.getForSupportTicketMessages.result.success": "Support ticket messages media has been successfully received.",
    "validations.api.general.device.icon.destroy.result.success": "Device icons have been successfully deleted.",
    "validations.api.general.device.icon.store.content.required": "The content field is required.",
    "validations.api.general.device.icon.store.content.string": "The content field must be a string.",
    "validations.api.general.device.icon.store.mime.required": "The mime field is required.",
    "validations.api.general.device.icon.store.mime.string": "The mime field must be a string.",
    "validations.api.general.device.icon.store.extension.required": "The extension field is required.",
    "validations.api.general.device.icon.store.extension.string": "The extension field must be a string.",
    "validations.api.general.device.icon.store.result.error": "Failed to find a device icon.",
    "validations.api.general.device.icon.store.result.success": "Device icon has been successfully stored.",
    "validations.api.general.payment.method.image.destroy.result.success": "Payment method images have been successfully deleted.",
    "validations.api.general.payment.method.image.store.content.required": "The content field is required.",
    "validations.api.general.payment.method.image.store.content.string": "The content field must be a string.",
    "validations.api.general.payment.method.image.store.mime.required": "The mime field is required.",
    "validations.api.general.payment.method.image.store.mime.string": "The mime field must be a string.",
    "validations.api.general.payment.method.image.store.extension.required": "The extension field is required.",
    "validations.api.general.payment.method.image.store.extension.string": "The extension field must be a string.",
    "validations.api.general.payment.method.image.store.result.error": "Failed to find a payment method image.",
    "validations.api.general.payment.method.image.store.result.success": "Payment method image has been successfully stored.",
    "validations.api.general.platform.icon.destroy.result.success": "Platform icons have been successfully deleted.",
    "validations.api.general.platform.icon.store.content.required": "The content field is required.",
    "validations.api.general.platform.icon.store.content.string": "The content field must be a string.",
    "validations.api.general.platform.icon.store.mime.required": "The mime field is required.",
    "validations.api.general.platform.icon.store.mime.string": "The mime field must be a string.",
    "validations.api.general.platform.icon.store.extension.required": "The extension field is required.",
    "validations.api.general.platform.icon.store.extension.string": "The extension field must be a string.",
    "validations.api.general.platform.icon.store.result.error": "Failed to find a platform icon.",
    "validations.api.general.platform.icon.store.result.success": "Platform icon has been successfully stored.",
    "validations.api.general.user.avatar.acceptForRequest.result.success": "User avatar has been successfully accepted.",
    "validations.api.general.user.avatar.declineForRequest.result.success": "User avatar has been successfully declined.",
    "validations.api.general.user.avatar.store.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.avatar.store.content.required": "The content field is required.",
    "validations.api.general.user.avatar.store.content.string": "The content field must be a string.",
    "validations.api.general.user.avatar.store.mime.required": "The mime field is required.",
    "validations.api.general.user.avatar.store.mime.string": "The mime field must be a string.",
    "validations.api.general.user.avatar.store.extension.required": "The extension field is required.",
    "validations.api.general.user.avatar.store.extension.string": "The extension field must be a string.",
    "validations.api.general.user.avatar.store.declined.boolean": "The boolean field must be a boolean.",
    "validations.api.general.user.avatar.store.result.error": "Failed to find а user avatar.",
    "validations.api.general.user.avatar.store.result.success": "User avatar has been successfully stored.",
    "validations.api.general.user.background.acceptForRequest.result.success": "User background has been successfully accepted.",
    "validations.api.general.user.background.declineForRequest.result.success": "User background has been successfully declined.",
    "validations.api.general.user.background.store.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.background.store.content.required": "The content field is required.",
    "validations.api.general.user.background.store.content.string": "The content field must be a string.",
    "validations.api.general.user.background.store.mime.required": "The mime field is required.",
    "validations.api.general.user.background.store.mime.string": "The mime field must be a string.",
    "validations.api.general.user.background.store.extension.required": "The extension field is required.",
    "validations.api.general.user.background.store.extension.string": "The extension field must be a string.",
    "validations.api.general.user.background.store.declined.boolean": "The boolean field must be a boolean.",
    "validations.api.general.user.background.store.result.error": "Failed to find а user background.",
    "validations.api.general.user.background.store.result.success": "User background has been successfully stored.",
    "validations.api.general.user.idVerification.image.declineForRequest.result.success": "User id verification image has been successfully declined.",
    "validations.api.general.user.idVerification.image.store.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.idVerification.image.store.content.required": "The content field is required.",
    "validations.api.general.user.idVerification.image.store.content.string": "The content field must be a string.",
    "validations.api.general.user.idVerification.image.store.mime.required": "The mime field is required.",
    "validations.api.general.user.idVerification.image.store.mime.string": "The mime field must be a string.",
    "validations.api.general.user.idVerification.image.store.extension.required": "The extension field is required.",
    "validations.api.general.user.idVerification.image.store.extension.string": "The extension field must be a string.",
    "validations.api.general.user.idVerification.image.store.result.success": "User id verification image has been successfully stored.",
    "validations.api.general.user.image.acceptForRequest.result.success": "User images for request have been successfully accepted.",
    "validations.api.general.user.image.declineForRequest.result.success": "User images for request have been successfully declined.",
    "validations.api.general.user.image.storeMany.user_images.required": "The user images ids field is required.",
    "validations.api.general.user.image.storeMany.user_images.array": "The user images ids field must be an array.",
    "validations.api.general.user.image.storeMany.user_images.*.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.image.storeMany.user_images.*.content.required": "The content field is required.",
    "validations.api.general.user.image.storeMany.user_images.*.content.string": "The content field must be a string.",
    "validations.api.general.user.image.storeMany.user_images.*.mime.required": "The mime field is required.",
    "validations.api.general.user.image.storeMany.user_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.user.image.storeMany.user_images.*.extension.required": "The extension field is required.",
    "validations.api.general.user.image.storeMany.user_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.user.image.storeMany.result.success": "User images have been successfully stored.",
    "validations.api.general.user.image.updateLikes.likes.required": "The likes field is required.",
    "validations.api.general.user.image.updateLikes.likes.integer": "The likes field must be an integer.",
    "validations.api.general.user.image.updateLikes.result.error.find": "Failed to find а user image.",
    "validations.api.general.user.image.updateLikes.result.success": "User image has been successfully updated.",
    "validations.api.general.user.sticker.deleteFavorite.external_id.required": "The external id field is required.",
    "validations.api.general.user.sticker.deleteFavorite.external_id.string": "The external id field must be a string.",
    "validations.api.general.user.sticker.deleteFavorite.result.error.exists": "Favorite sticker doesn't exist.",
    "validations.api.general.user.sticker.deleteFavorite.result.success": "User favorite sticker has been successfully deleted.",
    "validations.api.general.user.sticker.getCategories.type.required": "The type field is required.",
    "validations.api.general.user.sticker.getCategories.type.string": "The type field must be a string.",
    "validations.api.general.user.sticker.getCategories.type.in": "The selected type is invalid.",
    "validations.api.general.user.sticker.getCategories.result.success": "All sticker categories have been successfully received.",
    "validations.api.general.user.sticker.getFavorites.result.success": "User favorite stickers have been successfully received.",
    "validations.api.general.user.sticker.getFeatured.limit.required": "The limit field is required.",
    "validations.api.general.user.sticker.getFeatured.limit.integer": "The limit field must be an integer.",
    "validations.api.general.user.sticker.getFeatured.next.string": "The next field must be a string.",
    "validations.api.general.user.sticker.getFeatured.result.success": "All featured stickers have been successfully received.",
    "validations.api.general.user.sticker.searchByQuery.query.required": "The query field is required.",
    "validations.api.general.user.sticker.searchByQuery.query.string": "The query field must be a string.",
    "validations.api.general.user.sticker.searchByQuery.limit.required": "The limit field is required.",
    "validations.api.general.user.sticker.searchByQuery.limit.integer": "The limit field must be an integer.",
    "validations.api.general.user.sticker.searchByQuery.next.string": "The next field must be a string.",
    "validations.api.general.user.sticker.searchByQuery.result.success": "All stickers by query have been successfully received.",
    "validations.api.general.user.sticker.storeFavorite.external_id.required": "The external id field is required.",
    "validations.api.general.user.sticker.storeFavorite.external_id.string": "The external id field must be a string.",
    "validations.api.general.user.sticker.storeFavorite.result.error.exists": "Favorite sticker already exists.",
    "validations.api.general.user.sticker.storeFavorite.result.success": "User favorite sticker has been successfully stored.",
    "validations.api.general.user.video.acceptForRequest.result.success": "User videos for request have been successfully accepted.",
    "validations.api.general.user.video.declineForRequest.result.success": "User videos for request have been successfully declined.",
    "validations.api.general.user.video.storeMany.user_videos.required": "The user videos ids field is required.",
    "validations.api.general.user.video.storeMany.user_videos.array": "The user videos ids field must be an array.",
    "validations.api.general.user.video.storeMany.user_videos.*.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.video.storeMany.user_videos.*.content.required": "The content field is required.",
    "validations.api.general.user.video.storeMany.user_videos.*.content.string": "The content field must be a string.",
    "validations.api.general.user.video.storeMany.user_videos.*.mime.required": "The mime field is required.",
    "validations.api.general.user.video.storeMany.user_videos.*.mime.string": "The mime field must be a string.",
    "validations.api.general.user.video.storeMany.user_videos.*.extension.required": "The extension field is required.",
    "validations.api.general.user.video.storeMany.user_videos.*.extension.string": "The extension field must be a string.",
    "validations.api.general.user.video.storeMany.result.success": "User videos have been successfully stored.",
    "validations.api.general.user.video.updateLikes.likes.required": "The likes field is required.",
    "validations.api.general.user.video.updateLikes.likes.integer": "The likes field must be an integer.",
    "validations.api.general.user.video.updateLikes.result.error.find": "Failed to find а user video.",
    "validations.api.general.user.video.updateLikes.result.success": "User video has been successfully updated.",
    "validations.api.general.user.voiceSample.acceptForRequest.result.success": "User voice sample has been successfully accepted.",
    "validations.api.general.user.voiceSample.declineForRequest.result.success": "User voice sample has been successfully declined.",
    "validations.api.general.user.voiceSample.downloadFile.result.error": "Failed to find а user voice sample.",
    "validations.api.general.user.voiceSample.store.request_id.string": "The request id field must be a string.",
    "validations.api.general.user.voiceSample.store.content.required": "The content field is required.",
    "validations.api.general.user.voiceSample.store.content.string": "The content field must be a string.",
    "validations.api.general.user.voiceSample.store.mime.required": "The mime field is required.",
    "validations.api.general.user.voiceSample.store.mime.string": "The mime field must be a string.",
    "validations.api.general.user.voiceSample.store.extension.required": "The extension field is required.",
    "validations.api.general.user.voiceSample.store.extension.string": "The extension field must be a string.",
    "validations.api.general.user.voiceSample.store.declined.boolean": "The boolean field must be a boolean.",
    "validations.api.general.user.voiceSample.store.result.error": "Failed to find а user voice sample.",
    "validations.api.general.user.voiceSample.store.result.success": "User voice sample has been successfully stored.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.required": "The vat number proof documents field is required.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.array": "The vat number proof documents field must be an array.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.content.required": "The content field is required.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.content.string": "The content field must be a string.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.mime.required": "The mime field is required.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.mime.string": "The mime field must be a string.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.extension.required": "The extension field is required.",
    "validations.api.general.vatNumber.proof.document.storeMany.vat_number_proof_documents.*.extension.string": "The extension field must be a string.",
    "validations.api.general.vatNumber.proof.document.storeMany.result.success": "Vat number proof documents has been successfully created.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.required": "The vat number proof images field is required.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.array": "The vat number proof images field must be an array.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.content.required": "The content field is required.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.content.string": "The content field must be a string.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.mime.required": "The mime field is required.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.extension.required": "The extension field is required.",
    "validations.api.general.vatNumber.proof.image.storeMany.vat_number_proof_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.vatNumber.proof.image.storeMany.result.success": "Vat number proof images has been successfully created.",
    "validations.api.general.vatNumber.proof.getForVatNumberProof.result.success": "Vat number proof media has been successfully received.",
    "validations.api.general.vatNumber.proof.getForVatNumberProofs.auth_ids.required": "The auth field is required.",
    "validations.api.general.vatNumber.proof.getForVatNumberProofs.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.general.vatNumber.proof.getForVatNumberProofs.auth_ids.*.required": "The auth id field is required.",
    "validations.api.general.vatNumber.proof.getForVatNumberProofs.auth_ids.*.integer": "The auth id field must be a integer.",
    "validations.api.general.vatNumber.proof.getForVatNumberProofs.result.success": "Vat number proofs media has been successfully received.",
    "validations.api.general.vybe.image.acceptMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.general.vybe.image.acceptMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.general.vybe.image.acceptMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.general.vybe.image.acceptMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.general.vybe.image.acceptMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.general.vybe.image.acceptMany.result.success": "Vybe images has been successfully accepted.",
    "validations.api.general.vybe.image.declineMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.general.vybe.image.declineMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.general.vybe.image.declineMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.general.vybe.image.declineMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.general.vybe.image.declineMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.general.vybe.image.declineMany.result.success": "Vybe images has been successfully declined.",
    "validations.api.general.vybe.image.destroyMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.general.vybe.image.destroyMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.general.vybe.image.destroyMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.general.vybe.image.destroyMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.general.vybe.image.destroyMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.general.vybe.image.destroyMany.result.success": "Vybe images has been successfully deleted.",
    "validations.api.general.vybe.image.storeMany.vybe_images.required": "The vybe images field is required.",
    "validations.api.general.vybe.image.storeMany.vybe_images.array": "The vybe images field must be an array.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.content.required": "The content field is required.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.content.string": "The content field must be a string.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.mime.required": "The mime field is required.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.extension.required": "The extension field is required.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.main.boolean": "The main field must be a boolean.",
    "validations.api.general.vybe.image.storeMany.vybe_images.*.declined.boolean": "The declined field must be a boolean.",
    "validations.api.general.vybe.image.storeMany.result.error.find": "Failed to find а vybe image.",
    "validations.api.general.vybe.image.storeMany.result.success": "Vybe images has been successfully received.",
    "validations.api.general.vybe.video.acceptMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.general.vybe.video.acceptMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.general.vybe.video.acceptMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.general.vybe.video.acceptMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.general.vybe.video.acceptMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.general.vybe.video.acceptMany.result.success": "Vybe videos has been successfully accepted.",
    "validations.api.general.vybe.video.declineMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.general.vybe.video.declineMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.general.vybe.video.declineMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.general.vybe.video.declineMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.general.vybe.video.declineMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.general.vybe.video.declineMany.result.success": "Vybe videos has been successfully declined.",
    "validations.api.general.vybe.video.destroyMany.vybe_videos_ids.required": "The vybe videos ids field is required.",
    "validations.api.general.vybe.video.destroyMany.vybe_videos_ids.array": "The vybe videos ids field must be an array.",
    "validations.api.general.vybe.video.destroyMany.vybe_videos_ids.*.required": "The vybe video id field is required.",
    "validations.api.general.vybe.video.destroyMany.vybe_videos_ids.*.string": "The vybe video id field must be a string.",
    "validations.api.general.vybe.video.destroyMany.vybe_videos_ids.*.exists": "The selected vybe video id field is invalid.",
    "validations.api.general.vybe.video.destroyMany.result.success": "Vybe videos has been successfully deleted.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.required": "The vybe videos field is required.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.array": "The vybe videos field must be an array.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.content.required": "The content field is required.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.content.string": "The content field must be a string.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.mime.required": "The mime field is required.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.mime.string": "The mime field must be a string.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.extension.required": "The extension field is required.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.extension.string": "The extension field must be a string.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.main.boolean": "The main field must be a boolean.",
    "validations.api.general.vybe.video.storeMany.vybe_videos.*.declined.boolean": "The declined field must be a boolean.",
    "validations.api.general.vybe.video.storeMany.result.error.find": "Failed to find а vybe video.",
    "validations.api.general.vybe.video.storeMany.result.success": "Vybe videos has been successfully received.",
    "validations.api.general.withdrawal.receipt.proof.document.store.content.required": "The content field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.store.content.string": "The content field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.store.mime.required": "The mime field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.store.mime.string": "The mime field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.store.extension.required": "The extension field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.store.extension.string": "The extension field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.store.result.success": "Withdrawal receipt proof document has been successfully stored.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.required": "The withdrawal receipt proof documents field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.array": "The withdrawal receipt proof documents field must be an array.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.content.required": "The content field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.content.string": "The content field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.mime.required": "The mime field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.mime.string": "The mime field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.extension.required": "The extension field is required.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.withdrawal_receipt_proof_documents.*.extension.string": "The extension field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.document.storeMany.result.success": "Withdrawal receipt proof documents have been successfully stored.",
    "validations.api.general.withdrawal.receipt.proof.image.store.content.required": "The content field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.store.content.string": "The content field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.store.mime.required": "The mime field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.store.mime.string": "The mime field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.store.extension.required": "The extension field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.store.extension.string": "The extension field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.store.result.success": "Withdrawal receipt proof image has been successfully stored.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.required": "The withdrawal receipt proof images field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.array": "The withdrawal receipt proof images field must be an array.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.content.required": "The content field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.content.string": "The content field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.mime.required": "The mime field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.mime.string": "The mime field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.extension.required": "The extension field is required.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.withdrawal_receipt_proof_images.*.extension.string": "The extension field must be a string.",
    "validations.api.general.withdrawal.receipt.proof.image.storeMany.result.success": "Withdrawal receipt proof images have been successfully stored.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProof.result.success": "Withdrawal receipt proof media has been successfully received.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProofs.withdrawal_receipts_ids.required": "The withdrawal receipts ids field is required.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProofs.withdrawal_receipts_ids.array": "The withdrawal receipts ids field must be an array.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProofs.withdrawal_receipts_ids.*.required": "The withdrawal receipt id field is required.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProofs.withdrawal_receipts_ids.*.integer": "The withdrawal receipt id field must be an integer.",
    "validations.api.general.withdrawal.receipt.proof.getForWithdrawalReceiptProofs.result.success": "Withdrawal receipt proofs media has been successfully received.",
    "validations.api.guest.activity.image.getForActivities.activities_ids.array": "The activities ids field must be an array.",
    "validations.api.guest.activity.image.getForActivities.activities_ids.*.required": "The activity id field is required.",
    "validations.api.guest.activity.image.getForActivities.activities_ids.*.integer": "The activity id field must be a string.",
    "validations.api.guest.activity.image.getForActivities.result.success": "Activities images has been successfully received.",
    "validations.api.guest.activity.image.getForActivity.result.success": "Activity images have been successfully received.",
    "validations.api.guest.admin.avatar.getForAdmins.auth_ids.required": "The auth ids field is required.",
    "validations.api.guest.admin.avatar.getForAdmins.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.guest.admin.avatar.getForAdmins.auth_ids.*.required": "The auth id field is required.",
    "validations.api.guest.admin.avatar.getForAdmins.auth_ids.*.integer": "The auth id field must be a string.",
    "validations.api.guest.admin.avatar.getForAdmins.result.success": "Admins avatars have been successfully received.",
    "validations.api.guest.alert.getForAlert.result.success": "Alert media has been successfully received.",
    "validations.api.guest.alert.getForAlerts.alerts_ids.required": "The alerts ids field is required.",
    "validations.api.guest.alert.getForAlerts.alerts_ids.array": "The alerts ids field must be an array.",
    "validations.api.guest.alert.getForAlerts.alerts_ids.*.required": "The alert id field is required.",
    "validations.api.guest.alert.getForAlerts.alerts_ids.*.string": "The alert id field must be a string.",
    "validations.api.guest.alert.getForAlerts.alerts_ids.*.exists": "The selected alert id field is invalid.",
    "validations.api.guest.alert.getForAlerts.result.success": "Alerts media has been successfully received.",
    "validations.api.guest.category.icon.getForCategories.categories_ids.required": "The categories ids field is required.",
    "validations.api.guest.category.icon.getForCategories.categories_ids.array": "The categories ids field must be an array.",
    "validations.api.guest.category.icon.getForCategories.categories_ids.*.required": "The category id field is required.",
    "validations.api.guest.category.icon.getForCategories.categories_ids.*.string": "The category id field must be a string.",
    "validations.api.guest.category.icon.getForCategories.categories_ids.*.exists": "The selected category id field is invalid.",
    "validations.api.guest.category.icon.getForCategories.result.success": "Categories icons have been successfully received.",
    "validations.api.guest.category.icon.getForCategory.result.success": "Category icons have been successfully received.",
    "validations.api.guest.device.icon.getForDevice.result.success": "Device icons have been successfully received.",
    "validations.api.guest.device.icon.getForDevices.devices_ids.required": "The devices ids field is required.",
    "validations.api.guest.device.icon.getForDevices.devices_ids.array": "The devices ids field must be an array.",
    "validations.api.guest.device.icon.getForDevices.devices_ids.*.required": "The device id field is required.",
    "validations.api.guest.device.icon.getForDevices.devices_ids.*.string": "The device id field must be a string.",
    "validations.api.guest.device.icon.getForDevices.devices_ids.*.exists": "The selected device id field is invalid.",
    "validations.api.guest.device.icon.getForDevices.result.success": "Devices icons have been successfully received.",
    "validations.api.guest.payment.method.image.getForPaymentMethod.result.success": "Payment method images have been successfully received.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.payment_methods_ids.required": "The payment methods ids field is required.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.payment_methods_ids.array": "The payment methods ids field must be an array.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.payment_methods_ids.*.required": "The payment method id field is required.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.payment_methods_ids.*.string": "The payment methods id field must be a string.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.payment_methods_ids.*.exists": "The selected payment methods id field is invalid.",
    "validations.api.guest.payment.method.image.getForPaymentMethods.result.success": "Payment method images have been successfully received.",
    "validations.api.guest.platform.icon.getForPlatform.result.success": "Platform icons have been successfully received.",
    "validations.api.guest.platform.icon.getForPlatforms.platforms_ids.required": "The platforms ids field is required.",
    "validations.api.guest.platform.icon.getForPlatforms.platforms_ids.array": "The platforms ids field must be an array.",
    "validations.api.guest.platform.icon.getForPlatforms.platforms_ids.*.required": "The platform id field is required.",
    "validations.api.guest.platform.icon.getForPlatforms.platforms_ids.*.string": "The platform id field must be a string.",
    "validations.api.guest.platform.icon.getForPlatforms.platforms_ids.*.exists": "The selected platform id field is invalid.",
    "validations.api.guest.platform.icon.getForPlatforms.result.success": "Platforms icons have been successfully received.",
    "validations.api.guest.search.getForClientGlobal.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.guest.search.getForClientGlobal.auth_ids.*.required": "The auth id field is required.",
    "validations.api.guest.search.getForClientGlobal.auth_ids.*.integer": "The auth id field must be a string.",
    "validations.api.guest.search.getForClientGlobal.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.guest.search.getForClientGlobal.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.guest.search.getForClientGlobal.vybe_images_ids.*.integer": "The vybe image id field must be a string.",
    "validations.api.guest.search.getForClientGlobal.vybe_videos_ids.array": "The vybe videos ids field must be an array.",
    "validations.api.guest.search.getForClientGlobal.vybe_videos_ids.*.required": "The vybe video id field is required.",
    "validations.api.guest.search.getForClientGlobal.vybe_videos_ids.*.integer": "The vybe video id field must be a string.",
    "validations.api.guest.search.getForClientGlobal.activities_ids.array": "The activities ids field must be an array.",
    "validations.api.guest.search.getForClientGlobal.activities_ids.*.required": "The activity id field is required.",
    "validations.api.guest.search.getForClientGlobal.activities_ids.*.integer": "The activity id field must be a string.",
    "validations.api.guest.search.getForClientGlobal.result.success": "Client global search media has been successfully received.",
    "validations.api.guest.user.avatar.getForUsers.auth_ids.required": "The auth ids field is required.",
    "validations.api.guest.user.avatar.getForUsers.auth_ids.array": "The auth ids field must be an array.",
    "validations.api.guest.user.avatar.getForUsers.auth_ids.*.required": "The auth id field is required.",
    "validations.api.guest.user.avatar.getForUsers.auth_ids.*.integer": "The auth id field must be a string.",
    "validations.api.guest.user.avatar.getForUsers.result.success": "All user avatars has been successfully received.",
    "validations.api.guest.user.idVerification.image.getForRequest.result.success": "User id verification images for request have been successfully received.",
    "validations.api.guest.user.idVerification.image.getForUser.result.success": "User id verification images have been successfully received.",
    "validations.api.guest.user.image.existsForUser.result.error": "Image doesn't belong to user.",
    "validations.api.guest.user.image.existsForUser.result.success": "Image belongs to user.",
    "validations.api.guest.user.video.existsForUser.result.error": "Video doesn't belong to user.",
    "validations.api.guest.user.video.existsForUser.result.success": "Video belongs to user.",
    "validations.api.guest.user.getForRequest.result.success": "User profile request media has been successfully received.",
    "validations.api.guest.user.getForUser.avatars_ids.array": "The avatars ids field must be an array.",
    "validations.api.guest.user.getForUser.avatars_ids.*.required": "The avatar id field is required.",
    "validations.api.guest.user.getForUser.avatars_ids.*.integer": "The avatar id field must be a string.",
    "validations.api.guest.user.getForUser.voice_samples_ids.array": "The voice_samples ids field must be an array.",
    "validations.api.guest.user.getForUser.voice_samples_ids.*.required": "The voice sample id field is required.",
    "validations.api.guest.user.getForUser.voice_samples_ids.*.integer": "The voice sample id field must be a string.",
    "validations.api.guest.user.getForUser.backgrounds_ids.array": "The backgrounds ids field must be an array.",
    "validations.api.guest.user.getForUser.backgrounds_ids.*.required": "The background id field is required.",
    "validations.api.guest.user.getForUser.backgrounds_ids.*.integer": "The background id field must be a string.",
    "validations.api.guest.user.getForUser.images_ids.array": "The images ids field must be an array.",
    "validations.api.guest.user.getForUser.images_ids.*.required": "The image id field is required.",
    "validations.api.guest.user.getForUser.images_ids.*.integer": "The image id field must be a string.",
    "validations.api.guest.user.getForUser.videos_ids.array": "The videos ids field must be an array.",
    "validations.api.guest.user.getForUser.videos_ids.*.required": "The video id field is required.",
    "validations.api.guest.user.getForUser.videos_ids.*.integer": "The video id field must be a string.",
    "validations.api.guest.user.getForUser.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.guest.user.getForUser.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.guest.user.getForUser.vybe_images_ids.*.integer": "The vybe image id field must be a string.",
    "validations.api.guest.user.getForUser.vybe_videos_ids.array": "The vybe videos ids field must be an array.",
    "validations.api.guest.user.getForUser.vybe_videos_ids.*.required": "The vybe video id field is required.",
    "validations.api.guest.user.getForUser.vybe_videos_ids.*.integer": "The vybe video id field must be a string.",
    "validations.api.guest.user.getForUser.activities_ids.array": "The activities ids field must be an array.",
    "validations.api.guest.user.getForUser.activities_ids.*.required": "The activity id field is required.",
    "validations.api.guest.user.getForUser.activities_ids.*.integer": "The activity id field must be a string.",
    "validations.api.guest.user.getForUser.result.success": "User media has been successfully received.",
    "validations.api.guest.user.getForUsers.avatars_ids.array": "The avatars ids field must be an array.",
    "validations.api.guest.user.getForUsers.avatars_ids.*.required": "The avatar id field is required.",
    "validations.api.guest.user.getForUsers.avatars_ids.*.integer": "The avatar id field must be a string.",
    "validations.api.guest.user.getForUsers.voice_samples_ids.array": "The voice_samples ids field must be an array.",
    "validations.api.guest.user.getForUsers.voice_samples_ids.*.required": "The voice sample id field is required.",
    "validations.api.guest.user.getForUsers.voice_samples_ids.*.integer": "The voice sample id field must be a string.",
    "validations.api.guest.user.getForUsers.backgrounds_ids.array": "The backgrounds ids field must be an array.",
    "validations.api.guest.user.getForUsers.backgrounds_ids.*.required": "The background id field is required.",
    "validations.api.guest.user.getForUsers.backgrounds_ids.*.integer": "The background id field must be a string.",
    "validations.api.guest.user.getForUsers.images_ids.array": "The images ids field must be an array.",
    "validations.api.guest.user.getForUsers.images_ids.*.required": "The image id field is required.",
    "validations.api.guest.user.getForUsers.images_ids.*.integer": "The image id field must be a string.",
    "validations.api.guest.user.getForUsers.videos_ids.array": "The videos ids field must be an array.",
    "validations.api.guest.user.getForUsers.videos_ids.*.required": "The video id field is required.",
    "validations.api.guest.user.getForUsers.videos_ids.*.integer": "The video id field must be a string.",
    "validations.api.guest.user.getForUsers.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.guest.user.getForUsers.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.guest.user.getForUsers.vybe_images_ids.*.integer": "The vybe image id field must be a string.",
    "validations.api.guest.user.getForUsers.vybe_videos_ids.array": "The vybe videos ids field must be an array.",
    "validations.api.guest.user.getForUsers.vybe_videos_ids.*.required": "The vybe video id field is required.",
    "validations.api.guest.user.getForUsers.vybe_videos_ids.*.integer": "The vybe video id field must be a string.",
    "validations.api.guest.user.getForUsers.activities_ids.array": "The activities ids field must be an array.",
    "validations.api.guest.user.getForUsers.activities_ids.*.required": "The activity id field is required.",
    "validations.api.guest.user.getForUsers.activities_ids.*.integer": "The activity id field must be a string.",
    "validations.api.guest.user.getForUsers.result.success": "Users media has been successfully received.",
    "validations.api.guest.vybe.image.showMany.vybe_images_ids.required": "The vybe images ids field is required.",
    "validations.api.guest.vybe.image.showMany.vybe_images_ids.array": "The vybe images ids field must be an array.",
    "validations.api.guest.vybe.image.showMany.vybe_images_ids.*.required": "The vybe image id field is required.",
    "validations.api.guest.vybe.image.showMany.vybe_images_ids.*.string": "The vybe image id field must be a string.",
    "validations.api.guest.vybe.image.showMany.vybe_images_ids.*.exists": "The selected vybe image id field is invalid.",
    "validations.api.guest.vybe.image.showMany.result.success": "Vybe images has been successfully received.",
    "validations.api.guest.vybe.video.showMany.vybe_videos_ids.required": "The vybe videos ids field is required.",
    "validations.api.guest.vybe.video.showMany.vybe_videos_ids.array": "The vybe videos ids field must be an array.",
    "validations.api.guest.vybe.video.showMany.vybe_videos_ids.*.required": "The vybe video id field is required.",
    "validations.api.guest.vybe.video.showMany.vybe_videos_ids.*.string": "The vybe video id field must be a string.",
    "validations.api.guest.vybe.video.showMany.vybe_videos_ids.*.exists": "The selected vybe video id field is invalid.",
    "validations.api.guest.vybe.video.showMany.result.success": "Vybe videos has been successfully received."
}
